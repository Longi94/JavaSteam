//file:noinspection GroovyAssignabilityCheck

plugins {
    id 'com.google.protobuf' version "0.9.2"
    id 'java'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// https://mvnrepository.com/artifact/com.google.protobuf/protoc
protobuf.protoc {
    artifact = 'com.google.protobuf:protoc:3.22.2'
}

javadoc {
    exclude "**/in/dragonbra/javasteam/protobufs/**"
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation 'com.google.protobuf:protobuf-java:3.22.2'

    /* Unit Testing */

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
}

/* Artifact publishing */

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'JavaSteam-tf'
                packaging = 'jar'
                description = 'TF classes for JavaSteam.'
                url = 'https://github.com/Longi94/JavaSteam'
                inceptionYear = '2018'

                scm {
                    connection = 'scm:git:git://github.com/Longi94/JavaSteam.git'
                    developerConnection = 'scm:git:ssh://github.com:Longi94/JavaSteam.git'
                    url = 'http://github.com/Longi94/JavaSteam/tree/master'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id = 'Longi'
                        name = 'Long Tran'
                        email = 'lngtrn94@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def stagingRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotRepoUrl : stagingRepoUrl
            credentials {
                username = ossrhUsername ?: ''
                password = ossrhPassword ?: ''
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
